{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","react_default","a","createElement","props","children","Component","Consumer","Contact","onShowClick","e","showContactInfo","onDeleteClick","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","delete","t0","stop","_x","_x2","_this$props$contact","name","email","phone","className","onClick","style","float","bind","Link","to","color","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","error","onChange","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onChangeHandler","defineProperty","target","console","log","onSubmit","preventDefault","_this$state","newContact","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","abrupt","match","params","put","sent","Header","branding","href","About","NotFound","Test","title","body","fetch","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d1d3779.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => this.setState({ contacts: res.data }));\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      showContactInfo: false\n    };\n\n    //this.onShowClick = this.onShowClick.bind(this);\n  }\n\n  onShowClick = e => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i onClick={this.onShowClick} className=\"fas fa-sort-down\" />\n               \n                <i\n                  className=\"fas fa-user-minus\"\n                  style={{ float: \"right\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`/contact/edit/${id}`}>\n                  <i className=\"fas fa-user-edit\" \n                    style={{ float: \"right\" ,color:\"black\",marginRight:'1rem'}}\n                    />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone} </li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n//Type checking with PropTypes\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  \n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  contact={contact}\n                />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  error,\n  onChange\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {'is-invalid':error})}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n     \n    </div>\n  );\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nTextInputGroup.propTypes = {\n    name:PropTypes.string.isRequired,\n    value:PropTypes.string.isRequired,\n    placeholder:PropTypes.string.isRequired,\n    type:PropTypes.string.isRequired,\n    label:PropTypes.string.isRequired,\n    onChange:PropTypes.func.isRequired,\n    error: PropTypes.string\n\n}\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport uuid from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChangeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(e.target.name, e.target.value);\n  };\n\n  onSubmit = (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    //check for errors\n    if (name === \"\") {\n      this.setState({\n        errors: { name: \"Name is required\" }\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: { email: \"Email is required\" }\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: { phone: \"Phone is required\" }\n      });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/users\",newContact)\n      .then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    error={errors.name}\n                    onChange={this.onChangeHandler}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email...\"\n                    value={email}\n                    error={errors.email}\n                    onChange={this.onChangeHandler}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone...\"\n                    value={phone}\n                    error={errors.phone}\n                    onChange={this.onChangeHandler}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport uuid from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n      const { id } = this.props.match.params;\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n\n      const contact = res.data;\n      this.setState({\n          name: contact.name,\n          email: contact.email,\n          phone: contact.phone\n      })\n  }\n\n  onChangeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(e.target.name, e.target.value);\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n     //check for errors\n     if (name === \"\") {\n        this.setState({\n          errors: { name: \"Name is required\" }\n        });\n        return;\n      }\n      if (email === \"\") {\n        this.setState({\n          errors: { email: \"Email is required\" }\n        });\n        return;\n      }\n      if (phone === \"\") {\n        this.setState({\n          errors: { phone: \"Phone is required\" }\n        });\n        return;\n      }\n\n      const updContact = {\n          name,\n          email,\n          phone\n      }\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\n    \n      dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n    \n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    error={errors.name}\n                    onChange={this.onChangeHandler}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email...\"\n                    value={email}\n                    error={errors.email}\n                    onChange={this.onChangeHandler}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone...\"\n                    value={phone}\n                    error={errors.phone}\n                    onChange={this.onChangeHandler}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\n//check the validation\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n      <div className=\"display-4\">About Contact Manager</div>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <div className=\"text-secondary\">Version 1.0.0</div>\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Pages Not Found</h1>\n      <p className=\"lead\">Sorry, that page can not be reached.</p>\n    </div>\n  )\n}\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n\n    state = {\n        title: '',\n        body: ''\n    }\n  componentWillMount() {\n    console.log(\"will\");\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data => this.setState({\n          title: data.title,\n          body: data.body\n      }));\n    \n  }\n  componentDidUpdate() {\n    console.log(\"update\");\n  }\n  render() {\n      const { title,body} = this.state;\n    return (\n      <div>\n        <h1>Test Component</h1>\n        <h4>{title}</h4>\n        <p>\n        {body}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'; \nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./context\";\n\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manger\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n\n               <Route exact path=\"/test\" component={Test} />\n               <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}